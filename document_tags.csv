文档标题,所属项目,文档关键词,文档内容概述
.~专项PRD-V1,未知项目,知识类文档; ,文档内容为空
18-文档分类&收集,知识管理项目,知识类文档; 超品中心; 用户运营; 品质运营; 行业运营; 公关营销,【主要内容】采用三级标签体系，按照文档内容类型和团队角色职能进行分类管理 超品中心 、直播部门、OMS 、 财务、法务 、商业化营销 、润物云 、朵薇 、内容业务 、投放中台、短剧 、广告代理 、 用户运营 （私域、客服）、 品质运营 、 行业运营 、 IP管理 、 公关营销 、 创新试点 业务（海外、得物）、 产研中心、人力资源 模拟点击的方式下载文档内容，并记录document_id、标题，文件是word格式，要注意自动化程序的调频率 3、获取文档纯文本内容：https://open.feishu.cn/document/server-docs/docs/docs/docx-v1/document/raw_content?appId=cli_a6781849b63f100e
API接口规范,流程优化项目,技术类文档; code; data; msg; GET; 通用状态码规范; 接口地址无效; API接口规范; 协议; 例如; 采用小驼峰格式,"【主要内容】整形的版本号: 大功能版本发布形式；具有当前版本状态下的所有API接口。例如：v1,v2 浮点型：为小版本号，只具备补充API的功能，其他API都默认调用对应大版本号的API。例如：v1.1或 v2.2 路径又称""终点""（endpoint），表示API的具体网址。 在RESTful架构中，每个网址代表一种资源（resource），所以网址中不能有动词，只能有名词，而且所用的名词往往与数据库的表格名对应。一般来说，数据库中的表都是同种记录的""集合""（collection），所以API中的名词也应该使用复数。 例: 有一个API提供企业的信息，包括各种产品和雇员的信息，则它的路径应该设计成下面这样。 【实施方案】整体规范采用RESTful方式来实施。 对于资源的具体操作类型，由HTTP动词表示。 code : 接口的执行的状态码。Number类型。 ===0 表示成功。其他代码定义见后面 通用状态码规范"
Ant Design of React,数据分析项目,技术类文档; Button; Form; const; import; key; from; Modal; title; React; name; tags; Ant; Design; antd; render,"【主要内容】你的内容应当放置于 col 内，并且，只有 col 可以作为 row 的直接元素。 调整布局要知道的基本内容就是24格栅，在调整的时候使用antd自带的功能可以使布局适应性更强。 const App = () => {  // 通过useHook 控制Modal 的显示与隐藏  const [visible, setVisible] = useState(false);  return (    <>      <Button type=""primary"" onClick={() => setVisible(true)}>        Open Modal of 1000px width      </Button>      <Modal        title=""Modal 1000px width""        centered        visible={visible}// 此处设置是否展示        onOk={() => setVisible(false)}        onCancel={() => setVisible(false)}        width={1000}// 设置modal 的宽度         // 使用footer 可自定义页脚按钮      >         // 随着功能的多样性 此处也会使用Table Form 等大型组件 丰富交互        <p>some contents...</p>        <p>some contents...</p>        <p>some contents...</p>      </Modal>    </>  );}; 简单的介绍了几个常用的组件的简单实用方式，实际生产中样式要更加的复杂。 Ant Design 官网可查阅更加详细的内容下面讲讲如何快速使用官网。 【实施方案】表格是最常用的组件之一 ，展示行列数据。 当有大量结构化的数据需要展现或需要对数据进行排序、搜索、分页、自定义操作等复杂行为时都可以使用Table。 return (    <>      <Form        {...formItemLayout}        layout={formLayout}        form={form}        //如果form需要默认值请在此处设置 不要在item上设置        initialValues={{ layout: formLayout }}         //数据变化（用户操作时触发 可获取变化的值 如果不需要监控可在onFinish中获取全部值）        //也可以使用from 或formRef 主动获取        //const values = form.getFieldsValue();        //const values = await formRef.current?.validateFields();        onValuesChange={onFormLayoutChange}      >        //label ：前展示的文字，name则为表单收集数据的字段名 不写不搜集        <Form.Item label=""Form Layout"" name=""layout"">          <Radio.Group value={formLayout}>            <Radio.Button value=""horizontal"">Horizontal</Radio.Button>            <Radio.Button value=""vertical"">Vertical</Radio.Button>            <Radio.Button value=""inline"">Inline</Radio.Button>          </Radio.Group>        </Form.Item>        <Form.Item label=""Field A"">          <Input placeholder=""input placeholder"" />        </Form.Item>        <Form.Item label=""Field B"">          <Input placeholder=""input placeholder"" />        </Form.Item>        <Form.Item {...buttonItemLayout}>          <Button type=""primary"">Submit</Button>        </Form.Item>      </Form>    </>  );}; 需要用户处理事务，又不希望跳转页面以致打断工作流程时，可以使用 Modal 在当前页面正中打开一个浮层，承载相应的操作。另外当需要一个简洁的确认框询问用户时，可以使用 Modal.confirm() 等语法糖方法。 【预期效果】const columns = [  {    title: 'Name',    dataIndex: 'name',    key: 'name',    render: text => <a>{text}</a>,  },  {    title: 'Age',    dataIndex: 'age',    key: 'age',  },  {    title: 'Address',    dataIndex: 'address',    key: 'address',  },  {    title: 'Tags',    key: 'tags',    dataIndex: 'tags',    render: tags => (      <>        {tags.map(tag => {          let color = tag.length > 5 ? 'geekblue' : 'green';          if (tag === 'loser') {            color = 'volcano';          }          return (            <Tag color={color} key={tag}>              {tag.toUpperCase()}            </Tag>          );        })}      </>    ),  },  {    title: 'Action',    key: 'action',    render: (text, record) => (      <Space size=""middle"">        <a>Invite {record.name}</a>        <a>Delete</a>      </Space>    ),  },];// 数据源 支持网络请求的异步结果const data = [  {    key: '1',    name: 'John Brown',    age: 32,    address: 'New York No. 1 Lake Park',    tags: ['nice', 'developer'],  },  {    key: '2',    name: 'Jim Green',    age: 42,    address: 'London No. 1 Lake Park',    tags: ['loser'],  },  {    key: '3',    name: 'Joe Black',    age: 32,    address: 'Sidney No. 1 Lake Park',    tags: ['cool', 'teacher'],  },]; 中间为选择的组件的内容介绍组件的使用方法和实际效果"
ES6+,技术平台项目,知识类文档; ES6,【文档概述】本文档描述了ES6+相关内容：ES6+...
FAQ,产品研发项目,知识类文档; FAQ; 登录遥望云,【背景情况】A：登录钉钉，并加入遥望，然后稍等片刻（一般情况每个整点钉钉会同步员工信息到遥望云），就可以正常登录了。
Git代码管理规范,流程优化项目,管理类文档; master; release; 分支; fix; 创建; feat; 分支合并到; 使用,【主要内容】开发日常需求或者修复时，从 master 分支 checkout 创建 feat_* 功能分支 或 fix_ 修复分支进行开发。 发布上线成功后，按照规范更新 CHANGLOG 文档，记录该版本更新内容。 基于 master 分支 创建 tag ，在 发行说明 中填入 该版本的更新内容。 功能分支： feat_ 开头。后面可以是功能名也可以是版本号。 【实施方案】发布时，先将需要发布的功能或修复分支以MR形式合并到 release 。再次过程可进行CR操作。 chore : 改变构建流程、或者增加依赖库、工具等
React Hook,数据分析项目,技术类文档; Hook; const; React; context; state; useState; return; count; 示例; effect; filters; 值得注意的是; class; function; div,"【背景情况】Hook 是 React 16.8 的新增特性。它可以让你在不编写 class 的情况下使用 state 以及其他的 React 特性。 解决编写和维护成千上万的组件时遇到的各种各样看起来不相关的问题，如在组建之间复用状态逻辑很难，复杂组件变得难以理解，以及难以理解的class。 【项目目标】Context 设计目的是为了共享那些对于一个组件树而言是“全局”的数据，例如当前认证的用户、主题或首选语言，如果对context不是很熟悉可以先了解context再看useContext 【主要内容】4. useEffect( (）=> {}, [AA，BB] ) 由于每次渲染都会调用useEffect 所以如果要进行性能优化可以使用 函数的第二个可选参数，在AA或BB 更改时进行更新。如果你要使用此优化方式，请确保数组中包含了所有外部作用域中会随时间变化并且在 effect 中使用的变量 通过自定义 Hook，可以将组件逻辑提取到可重用的函数中。上述示例为table 提供了网络请求和分页的业务逻辑，通过filters的更改进行新请求以更新table的内容 2.自定义 Hook 必须以 “use” 开头吗？必须如此。这个约定非常重要。不遵循的话，由于无法判断某个函数是否包含对其内部 Hook 的调用，React 将无法自动检查你的 Hook 是否违反了 Hook 的规则。 【实施方案】通过使用这个 Hook，你可以告诉 React 组件需要在渲染后执行某些操作。React 会保存你传递的函数（我们将它称之为 “effect”），并且在执行 DOM 更新之后调用它。在这个 effect 中，我们设置了 document 的 title 属性，也可以执行数据获取或调用其他命令式的 API。 3. 组件内如果有多个effect 按使用顺序依次执行。"
TS汇总文档,知识管理项目,技术类文档; number; string; name; const; let; function; return; Person; type; age; any; class; log; target; console; Bird; new; Animal; param; if; typeof; animal,【项目目标】原理： Duck-Check，只要目标类型中声明的属性变量在源类型中都存在就是兼容的。 当比较函数参数当类型当时候，只有当源函数参数能够赋值给目标函数或者返回来，才能赋值成功。 【主要内容】常数枚举与普通枚举的区别是，它会在编辑阶段被删除，并且不能包含计算成员； 可以把一个联合类型指定一个更具具体多类型 a、 指在定义函数、接口或类的时候，不预先指定具体的类型，而在使用的时候指定类型的一种特性； 泛型在判断兼容性当时候，会先判断具体的类型，然后再进行兼容性判断 【实施方案】！ 非空断言表示告诉 TS，这个属性肯定存在，让后续代码放心执行 c、严格模式，函数执行不了到地方； 实现了声明类型可以不用 指定函数参数类型和返回值类型
Type Script,技术平台项目,技术类文档; number; string; let; name; return; is; function; any; length; type; public; Tom; 类型; Person; age; Animal; result; not; to; value; class; Type,"【背景情况】enum Color {Red, Green, Blue}let c: Color = Color.Green;//默认情况下，从0开始为元素编号。 你也可以手动的指定成员的数值。//例如，我们将上面的例子改成从 1开始编号：enum Color {Red = 1, Green, Blue}let c: Color = Color.Green//或者，全部都采用手动赋值：enum Color {Red = 1, Green = 2, Blue = 4}let c: Color = Color.Green;//枚举类型提供的一个便利是你可以由枚举的值得到它的名字。//例如，我们知道数值为2，但是不确定它映射到Color里的哪个名字，我们可以查找相应的名字：enum Color {Red = 1, Green, Blue}let colorName: string = Color[2];console.log(colorName);  // 显示'Green'因为上面代码里它的值是2 【项目目标】// 函数声明（Function Declaration）function sum(x, y) {    return x + y;}// 函数表达式（Function Expression）let mySum = function (x, y) {    return x + y;};//一个函数有输入和输出，要在 TypeScript 中对其进行约束，需要把输入和输出都考虑到，//其中函数声明的类型定义较简单：function sum(x: number, y: number): number {    return x + y;}//*注意，输入多余的（或者少于要求的）参数，是不被允许的：//如果要我们现在写一个对函数表达式（Function Expression）的定义，可能会写成这样：let mySum = function (x: number, y: number): number {    return x + y;};//如果需要我们手动给 mySum 添加类型，则应该是这样：let mySum: (x: number, y: number) => number = function (x: number, y: number): number {    return x + y;}; //采用函数表达式|接口定义函数的方式时，对等号左侧进行类型限制，//可以保证以后对函数名赋值时保证参数个数、参数类型、返回值类型不变。//前面提到，输入多余的（或者少于要求的）参数，是不允许的。那么如何定义可选的参数呢？//与接口中的可选属性类似，我们用 ? 表示可选的参数：function buildName(firstName: string, lastName?: string) {    if (lastName) {        return firstName + ' ' + lastName;    } else {        return firstName;    }}let tomcat = buildName('Tom', 'Cat');let tom = buildName('Tom'); 【主要内容】增强了编辑器和 IDE 的功能，包括代码补全、接口提示、跳转到定义、代码重构等 TypeScript 拥抱了 ES6 规范，支持 ESNext 草案中处于第三阶状态（Stage 3）的特性 传统的JavaScript程序使用函数和基于原型的继承来创建可重用的组件，但对于熟悉使用面向对象方式的程序员来讲就有些棘手，因为他们用的是基于类的继承并且对象是由类构建出来的。 从ECMAScript 2015，也就是ECMAScript 6开始，JavaScript程序员将能够使用基于类的面向对象的方式。 使用TypeScript，允许开发者现在就使用这些特性，并且编译后的JavaScript可以在所有主流浏览器和平台上运行，而不需要等到下个JavaScript版本。 泛型（Generics）是指在定义函数、接口或类的时候，不预先指定具体的类型，而在使用的时候再指定类型的一种特性。 【实施方案】TypeScript像JavaScript一样可以操作数组元素。 有两种方式可以定义数组。 第一种，可以在元素类型后面接上 [] ，表示由此类型元素组成的一个数组： let notSure: any = 666;notSure = ""Semlinker"";notSure = false;any 类型本质上是类型系统的一个逃逸舱。作为开发者，这给了我们很大的自由：TypeScript 允许我们对 any 类型的值执行任何操作，而无需事先执行任何形式的检查。比如：let anyThing: any = 'hello';console.log(anyThing.myName);console.log(anyThing.myName.firstName);可以认为，声明一个变量为任意值之后，对它的任何操作，返回的内容的类型都是任意值。 在面向对象语言中，接口（Interfaces）是一个很重要的概念，它是对行为的抽象，而具体如何行动需要由类（classes）去实现（implement）。 【预期效果】为了让程序有价值，我们需要能够处理最简单的数据单元：数字，字符串，结构体，布尔值等。 TypeScript支持与JavaScript几乎相同的数据类型，此外还提供了实用的枚举类型方便我们使用"
YWFE_公用CDN服务,业务运营项目,技术类文档; cdn; ywwl; 公用库; min; 业务项目,【文档概述】本文档主要阐述了YWFE_公用CDN服务的相关内容，包括：支持 http 及 https 。推荐自适应方式应引用
【绑定打印机】使用教程终（加域版）,技术平台项目,知识类文档; 双击安装驱动; 绑定; 注册,【实施方案】前两步骤操作完即可正常打印。之后再打印直接刷卡即可，不用输入账户密码了。
公司VPN连接手册,运营推广项目,知识类文档; 安装客户端; 配置客户端; 填入,【主要内容】点击保存，点击链接，填入 confluence/gitlab 用户名密码，请注意，公司测试需要链接手机热点，没有账密的同学找墨麟开通。 首先，根据您的电脑类型，下载 secoclient 对应客户端安装包，下一步安装
内控中心-新人手册,人力资源项目,知识类文档; 链接; 内控中心,"【文档概述】本文档描述了内控中心-新人手册相关内容：内控中心-新人手册
链接..."
前端-新人手册,人力资源项目,知识类文档; 前端-新人手册; 前端,"【文档概述】本文档描述了前端-新人手册相关内容：前端-新人手册
..."
前言,流程优化项目,技术类文档; 链接; 前言; 欢迎加入遥望前端,【项目目标】主要使用的前端框架是React， 一些老项目的维护可能会接触到jQuery、vue。微信小程序、公众号以及钉钉小程序在个别项目中也有涉及。 【主要内容】为了能让新来的小伙伴更快的融入到团队当中，所以编写了一段前言把大家平时积累的知识点整合到一起，可以更清晰更快速的了解到这些内容。希望能通过本指引给您带来帮助。 【实施方案】研发流程&安全生产请查看 链接 。
办公设备申请标准,技术平台项目,知识类文档; 办公设备申请标准; 产研通用标准; 显示器设备,【背景情况】联想笔记本每季度为一周期，常有断货情况，按照实际需求紧急度与库存情况，具体型号可能有偏差，算力、内存与硬盘不会低于标准。 256GB硬盘标准的岗位，如确实有大容量工作需求，按实际情况可申请512GB硬盘，由对应TL严格把关需求真实度。
商家中心-新人手册,人力资源项目,知识类文档; 每周一次; 前言; 商家文档,【背景情况】最后再工作，流程上有任何问题，直接大胆问师兄、师姐，以及周围的同事，他们会热心帮你解答，再次欢迎你加入商家中心团队，期待我们一起开创新的篇章。 【实施方案】此文档将帮助你高效完成新人入职的初始化流程。
工作规划,技术平台项目,知识类文档; 回顾; OKR,"【文档概述】本文档描述了工作规划相关内容：工作规划
OKR 制定

点击图片可查看完整表格
OKR 回顾
第一季度 OKR 回顾
第二季度 OKR 回顾
第三季度 OKR 回顾
第四季度 OKR 回顾
..."
工程管理,移动端项目,技术类文档; build; yw; craco; yarn; com; api; test; 执行,【主要内容】所有的项目通过包 @ywfe/cli 控制，包括创建项目，创建lib，api codegen，以及打包 【实施方案】如果应用需要融合在遥望云，执行:
帐户开通与权限索引-通用版,技术平台项目,技术类文档; 产研常用; 开发常用; 行政法务类,【背景情况】该类账号基本为内部LDAP统一帐户，账号对接人为@LDAP时，账号问题咨询LDAP系统对接人
开发及发布流程规范,流程优化项目,管理类文档; 基于; SNAPSHOT; 去掉; 分支; 示例; Tips; version; 为了稳妥起见,【背景情况】正式发布后，1到2天没任何问题报出，则进入下一步 【主要内容】根据自己的改动内容决定是否修改版本号 若改动内容涉及到dubbo接口的改动（增删改），需要修改pom版本号 若有大版本更新，比如服务框架更新、重大功能更新等等，则如示例：1.0.6 => 1.1.0 灰度发布后，使用 灰度账号 验证功能是否正常， 若正常开始正式发布 【实施方案】若有SQL变更，需要登录 数据库审核平台archery 。第一次使用，需申请相关数据库权限，参考 操作手册 把开发分支合并到release分支，若有代码冲突则解决冲突，合并时将release分支的 -SNAPSHOT 去掉 得到群里确认后，方可发布 。jekins上选择tag号发布（此步骤需要获取操作线上环境的权限）
开发规范,流程优化项目,知识类文档; long; the; color; const; of; 2px; solid; div; bad; not; obj; item,【背景情况】箭头函数替代function ： 箭头函数不仅语法简洁易读，而且修复了 this 的问题，特别是在嵌套函数中。 // bad (在移动端会出问题)const longString = 'This is a very long string that \    far exceeds the 80 column limit. It unfortunately \    contains long stretches of spaces due to how the \    continued lines are indented.'; 【主要内容】用单引号，不要用双引号 ： 普通的字符串用单引号分割（’），如果字符串中包含单引号，那么考虑用模板字符串。 【实施方案】= + - 等操作符左右需要空格
技术文档汇总-通用版,知识管理项目,技术类文档; 技术文档汇总; 通用版,"【文档概述】本文档描述了技术文档汇总-通用版相关内容：技术文档汇总-通用版
..."
技术栈,技术平台项目,技术类文档; 技术栈,"【文档概述】本文档描述了技术栈相关内容：技术栈
..."
新人办公小贴士,人力资源项目,知识类文档; 密码; 新人办公小贴士; 办公小贴士,【文档概述】本文档主要阐述了新人办公小贴士的相关内容，包括：WiFi账号：YW-office 密码：yaowang@123 打印机账号：pinpaifang 密码：123456 （要使用打印机需在电脑安装驱动，驱动安装文件请联系对应招商同学，找@公司IT 雷洛/小志协助安装）
新人园地-通关宝典,人力资源项目,知识类文档; 新人园地; 通关宝典,"【文档概述】本文档描述了新人园地-通关宝典相关内容：新人园地-通关宝典
新人培养空间-2025 
..."
新人学习文档,人力资源项目,知识类文档; 新人学习文档,"【文档概述】本文档描述了新人学习文档相关内容：新人学习文档
..."
新人需知,人力资源项目,管理类文档; 周报; 遥望科技; 日报; 完成书写并提交; 相关协同方; 商旅出差; 花酿; 新人需知,【背景情况】入职三个月-阶段review，问题调优； •出差申请行程应与实际情况完全相符，否则会影响考勤数据。 【项目目标】入职首月-目标拉齐、信息交互、实战学习； TL周报：每周日晚18点前，完成书写并提交（有特殊要求的按照特殊要求走，同步HRBP） 【主要内容】①周报的每个必填板块，建议有沉淀、有思考的内容产出 周报：每周六晚24点前，完成书写并提交（发送群内功能开发中，后续通知） 【实施方案】公司实行标准工时和不定时工时，直播业务执行不定时工时。考勤制度->登录 遥望科技 · 遥望科技 （链接必知知识库） *日常加班：每个周日加班及时在人事通申请加班，并关注流程进度（每月7号18点系统会自动结束上月未走完的考勤相关流程），加班每月结算加班补贴； 怡酱：入离职流程、试用期流程、人事相关盖章流程、在职证明、收入证明、社保、公积金、商业保险、公司制度查阅路径、假勤规则、领取生日礼物、领取周年礼物、领取文化周边、投屏需求
直播中心-新人手册,人力资源项目,知识类文档; 直播中心; 新人手册,【文档概述】本文档描述了直播中心-新人手册相关内容：直播中心-新人手册...
研发流程&安全生产,流程优化项目,运维类文档; 研发流程; 安全生产,"【文档概述】本文档描述了研发流程&安全生产相关内容：研发流程&安全生产
..."
福利待遇,人力资源项目,知识类文档; 福利待遇; 带薪假,"【文档概述】本文档描述了福利待遇相关内容：福利待遇
福利待遇
1）带薪假

2）舒适办公

3）学习成长

4）女员工保护

..."
私有NPM仓库使用说明,技术平台项目,知识类文档; npm; nrm; install; yowant; 指定仓库,【主要内容】我们有定制的私有客户端YNPM，npm的常用功能均支持。特别添加了 doc 查看包说明功能。使用方式如下：
语雀空间权限说明,知识管理项目,知识类文档; 关闭; 开启; 高级设置,【主要内容】原则性上，在上层组织架构已经建立团队后，下级团队尽量不再另设团队，而是以知识库来区分子团队内容。
财务专项PRD-V1,财务管理项目,需求类文档; 业绩认领; 毛利确认; 规则; 遥望云; 业务场景和需求点; 功能; 数据输入; 数据输出; 模块逻辑; 结算规则; 需要通知到招商; 直播选品; 高付费规则; 规则的修改; 条件,【背景情况】阶段一：解决现阶段财务系统存在的问题 导致原因：毛利确认时工作室人员更换了商品规则，而他们没权限看合同，因此在业绩认领页面，招商除了关联商品外，还需要复核是否商品更新了规则，合同更新了最新规则 【项目目标】平台风控：品牌方担心平台风控店铺在逃避费用，所以担心被下链接或者关店铺，就会要求佣金按照线上走 【主要内容】阶段二：新增系统功能，争取覆盖80%的财务业务，更高提效 消息模版：卡片消息，卡片内容如下 内容：规则发生修改，请前往查看。 六、产品设计-内控功能优化【做P1&P2】 【实施方案】业务调研文档：财务结算流程-更新至01.24 现有逻辑：坑位费无论哪种状态，都可以通过售后单解决；佣金生成对账单后，商家确认后就不能通过售后单解决。 目前招商人员符合结算规则是否正确，依据是合同，而合同在系统的其他页面，复核操作变得复杂。故需要在业绩认领处关联合同且支持合同预览。
部门初相识,组织管理项目,管理类文档; 定位价值; 职责; 职责：; 线上故障处理流程; 部门初相识; 部门定位; 产品部门; 设计,【背景情况】UI验收（针对界面、交互、功能、bug输出UI验收文档并完成调整优化）、规范基础组件和业务组件并推动落地、问卷调研（收集用户意见和问题） 执行测试用例，发现并报告软件中的缺陷和问题。 【项目目标】制定详细的测试计划和策略，覆盖各种功能、性能、兼容性等方面。 定位价值：是组织内部项目管理的中枢机构，负责制定和优化项目管理流程，提升项目管理效率，确保项目高效推进和战略目标的达成 【主要内容】制定产品的规划和路线图，明确产品的功能特性和优先级。 提升组织内部项目管理能力，包括培训、项目分享和最佳实践推广 【实施方案】定位价值：负责将产品原型转化为用户可操作的界面，提升用户体验，是企业与用户互动的重要窗口 实现页面的交互效果，提升用户操作的流畅性和便捷性，确保产品在不同设备和浏览器上的兼容性。 定位价值：负责是产品的核心支撑，负责数据处理、业务逻辑实现和系统稳定性保障 【预期效果】定位价值：是企业的降本增效策划者，负责制定产品发展方向，挖掘用户需求，确保产品能够满足市场和用户的需求，为企业创造价值 定位价值：负责产品的界面设计，优化用户体验，规范产品的一致性，降低用户使用成本，提高用户满意度
项目日会,技术平台项目,知识类文档; 项目日会,【文档概述】本文档描述了项目日会相关内容：项目日会...
项目管理-新人手册,人力资源项目,管理类文档; ywwl; yuque; 产研项目管理制度; 产研项目管理机制; 制度和计划,【背景情况】以上如有未解决的问题可以找PMO沟通解决。 【项目目标】欢迎小伙伴加入遥望产研中心，接下来的日子将与大家一起开发有趣有价值的项目。项目管理涉及到项目的方方面面，下面让我们一期熟悉起来把~ 产研项目管理制度分为三个大类：项目流程SOP、制度和计划、公共模板。 【实施方案】新入职小伙伴，由师兄讲解项目研发流程、管理制度和模板。 在项目开发过程中，虚拟小组PM也要指导和帮助小入职小伙伴尽快熟悉流程融入项目管理制度中来。 一 项目流程SOP： https://ywwl.yuque.com/ps6v5w/uqyg5y/wgnh3k
飞书空间权限说明,技术平台项目,知识类文档; 飞书空间权限说明,【文档概述】本文档描述了飞书空间权限说明相关内容：飞书空间权限说明...
